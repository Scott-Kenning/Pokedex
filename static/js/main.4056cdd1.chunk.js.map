{"version":3,"sources":["Actions/PokemonActions.js","capitalize.js","Containers/PokemonList.js","Containers/Pokemon.js","App.js","reportWebVitals.js","Reducers/PokemonListReducer.js","Reducers/PokemonMultipleReducer.js","Reducers/RootReducer.js","Store.js","index.js"],"names":["GetPokemonList","page","dispatch","a","type","offset","axios","get","res","payload","data","capitalizeFirst","name","charAt","toUpperCase","slice","PokemonList","props","useState","search","setSearch","useDispatch","pokemonList","useSelector","state","React","useEffect","FetchData","className","onChange","e","target","value","onKeyPress","event","key","history","push","toLowerCase","console","log","onClick","_","isEmpty","loading","errorMsg","map","el","to","pageCount","Math","ceil","count","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","containerClassName","Pokemon","pokemonName","match","params","pokemon","pokemonState","pokeData","src","sprites","front_default","alt","back_default","stats","stat","base_stat","abilities","ability","ShowData","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DefaultState","PokemonListReducer","action","results","PokemonMultipleReducer","laoding","RootReducer","combineReducers","Store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.4056cdd1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GetPokemonList = (page) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: \"POKEMON_LIST_LOADING\"\r\n        })\r\n\r\n\r\n        const perPage = 15;\r\n        const offset = (page * perPage) - perPage;\r\n\r\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=${perPage}&offset=${offset}`)\r\n\r\n        dispatch({\r\n            type: \"POKEMON_LIST_SUCCESS\",\r\n            payload: res.data\r\n        })\r\n    } catch (e) {\r\n        dispatch({\r\n            type: \"POKEMON_LIST_FAIL\"\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const GetPokemon = (pokemon) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: \"POKEMON_MULTIPLE_LOADING\"\r\n        })\r\n\r\n\r\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon}`)\r\n\r\n        dispatch({\r\n            type: \"POKEMON_MULTIPLE_SUCCESS\",\r\n            payload: res.data,\r\n            pokemonName: pokemon\r\n        })\r\n    } catch (e) {\r\n        dispatch({\r\n            type: \"POKEMON_MULTIPLE_FAIL\"\r\n        })\r\n    }\r\n}","export const capitalizeFirst = (name) => {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { useState } from 'react';\r\nimport _ from \"lodash\";\r\nimport { GetPokemonList } from '../Actions/PokemonActions';\r\nimport {Link} from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { capitalizeFirst } from \"../capitalize\"\r\n\r\nconst PokemonList = (props) => {\r\n    const [search, setSearch] = useState();\r\n    const dispatch = useDispatch();\r\n    const pokemonList = useSelector(state => state.PokemonList);\r\n    React.useEffect( () => {\r\n        FetchData(1)\r\n    }, []);\r\n\r\n    const FetchData = (page = 1) => {\r\n        dispatch(GetPokemonList(page))\r\n    }\r\n\r\n    const handleSearchInputKeyPress = event => {\r\n        if(event.key === 'Enter') {\r\n            props.history.push(`/pokemon/${search.toLowerCase()}`)\r\n            console.log('Enter Key Pressed')\r\n        }\r\n    }\r\n\r\n    const ShowData = () => {\r\n        if (!_.isEmpty(pokemonList.data)) {\r\n            return(\r\n                <div className={\"list-wrapper\"}>\r\n                  {pokemonList.data.map(el => {\r\n                    return(\r\n                      <div className={\"pokemon-item\"}>\r\n                        <p>{capitalizeFirst(el.name)}</p>\r\n                        <Link to={`/pokemon/${el.name}`}>View</Link>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              )\r\n        }\r\n\r\n        if(pokemonList.loading) {\r\n            return <p>Loading</p>\r\n        }\r\n        \r\n        if (pokemonList.errorMsg !== \"\") {\r\n            return <p>{pokemonList.errorMsg}</p>\r\n        }\r\n\r\n        return <p>unable to get data</p>\r\n    }\r\n    return(\r\n        <div>\r\n            <div className=\"search-wrapper\">\r\n                <h2>Search Pokemon: </h2>\r\n                <input type=\"text\" className=\"search-bar\" onChange={e => setSearch(e.target.value)} onKeyPress={handleSearchInputKeyPress}/>\r\n                <button className=\"search-button\" \r\n                onClick={() => props.history.push(`/pokemon/${search.toLowerCase()}`)} >Search</button>\r\n            </div>\r\n            {ShowData()}\r\n            {!_.isEmpty(pokemonList.data) && (\r\n                <ReactPaginate\r\n                    pageCount =  {Math.ceil(pokemonList.count / 15)}\r\n                    pageRangeDisplayed={2}\r\n                    marginPagesDisplayed={1}\r\n                    onPageChange={(data) => FetchData(data.selected + 1)}\r\n                    containerClassName=\"pagination\"\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PokemonList;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetPokemon } from '../Actions/PokemonActions';\r\nimport _ from \"lodash\";\r\nimport PokemonList from './PokemonList';\r\nimport { capitalizeFirst } from '../capitalize';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Pokemon = (props) => {\r\n    const pokemonName = props.match.params.pokemon;\r\n    const dispatch = useDispatch();\r\n    const pokemonState = useSelector(state => state.Pokemon);\r\n    React.useEffect( () => {\r\n        dispatch(GetPokemon(pokemonName))\r\n    }, []);\r\n\r\n    const ShowData = () => {\r\n        if(PokemonList.loading) {\r\n            return <p>Loading</p>\r\n        }\r\n\r\n\r\n        if(!_.isEmpty(pokemonState.data[pokemonName])) {\r\n            const pokeData = pokemonState.data[pokemonName]\r\n            return (\r\n                <div className={\"pokemon-wrapper\"}>\r\n                    <h1>{capitalizeFirst(pokemonName)}</h1>\r\n                    <div className={\"item\"}>\r\n                        <h1>Images</h1>\r\n                        <img src ={pokeData.sprites.front_default} alt =\"Front View of Pokemon\"/>\r\n                        <img src ={pokeData.sprites.back_default} alt =\"Back View of Pokemon\"/>\r\n                    </div>\r\n                    <div className={\"item\"}>\r\n                        <h1>Stats</h1>\r\n                        {pokeData.stats.map(el => {\r\n                            return <p>{capitalizeFirst(el.stat.name) + \":\"} {el.base_stat}</p>\r\n                        })}\r\n                    </div>\r\n                    <div className={\"item abilities\"}>\r\n                        <h1>Abilities</h1>\r\n                        {pokeData.abilities.map(el => {\r\n                            return <p>{\"-\" + capitalizeFirst(el.ability.name)}</p>\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (pokemonState.loading) {\r\n            return (\r\n                <div>\r\n                    <p>Loading...</p>\r\n                    <p>If this is taking a long time, you may have entered an incorrect Pokemon name</p>\r\n                    <NavLink to={\"/pokemon/\"}>Back to home</NavLink>\r\n                </div>\r\n            ) \r\n        }\r\n\r\n        if(pokemonState.errorMsg !== \"\") {\r\n            return <p>{pokemonState.errorMsg}</p>\r\n        }\r\n\r\n        return <NavLink to={\"/pokemon/\"}>Error retrieving Pokemon</NavLink>\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"poke\">\r\n            {ShowData()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Pokemon;","import './App.css';\nimport react from 'react';\nimport {Switch, Route, NavLink, Redirect} from 'react-router-dom';\nimport PokemonList from './Containers/PokemonList';\nimport Pokemon from './Containers/Pokemon';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>\n        <NavLink to={\"/pokemon/\"}>Pokedex</NavLink>\n      </nav>\n      <Switch>\n        <Route path ={\"/pokemon/\"} exact component={PokemonList} />\n        <Route path ={\"/pokemon/:pokemon\"} exact component={Pokemon} />\n        <Redirect to ={\"/pokemon/\"} />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const DefaultState = {\r\n    loading: false,\r\n    data: [],\r\n    errorMsg: \"\",\r\n    count: 0\r\n};\r\n\r\nconst PokemonListReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case \"POKEMON_LIST_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                errorMsg: \"\"\r\n\r\n            };\r\n        case \"POKEMON_LIST_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: \"Unable to retrieve pokemon\"\r\n            };\r\n        case \"POKEMON_LIST_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload.results,\r\n                errorMsg: \"\",\r\n                count: action.payload.count\r\n            };\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default PokemonListReducer\r\n\r\n","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst PokemonMultipleReducer = (state=DefaultState,action) => {\r\n    switch (action.type) {\r\n        case \"POKEMON_MULTIPLE_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                errorMsg: \"\"\r\n            }\r\n        case \"POKEMON_MULTIPLE_FAIL\":\r\n            return {\r\n                ...state,\r\n                laoding: false,\r\n                errorMsg: \"Unable to find Pokemon\"\r\n            }\r\n        case \"POKEMON_MULTIPLE_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: \"\",\r\n                data: {\r\n                    ...state.data,\r\n                    [action.pokemonName]: action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default PokemonMultipleReducer","import { combineReducers } from \"redux\";\r\nimport PokemonListReducer from \"./PokemonListReducer\";\r\nimport PokemonMultipleReducer from \"./PokemonMultipleReducer\";\r\n\r\nconst RootReducer = combineReducers( {\r\n    PokemonList: PokemonListReducer,\r\n    Pokemon: PokemonMultipleReducer\r\n} );\r\n\r\nexport default RootReducer;","import {createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport RootReducer from \"./Reducers/RootReducer\";\r\n\r\nconst Store = createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default Store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport Store from \"./Store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={Store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}